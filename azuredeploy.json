{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "virtualMachineName": "cvltLab-VM",
    "virtualMachineSize": "Standard_DS3",
    "location": "[resourceGroup().location]",
    "virtualNetworkName": "cvltLab-VNET",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnet1Name'))]",
    "networkInterfaceName": "[concat(variables('virtualMachineName'),'-NIC1')]",
    "NSGInfraname": "InfraSubnet-NSG",
    "availabilitySetName": "[concat(variables('virtualMachineName'),'-AV')]",
    "StorageAccountName": "[concat('cvltlab', uniqueString(resourceGroup().id),'sta')]",
    "diagnosticsStorageAccountName": "[concat('diag', uniqueString(resourceGroup().id),'sta')]",
    "diagnosticsStorageAccountType": "Standard_LRS",
    "vnetAddressPrefix": "10.100.0.0/16",
    "subnet1Name": "InfraSubnet",
    "subnet1Prefix": "10.100.100.0/24",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "gatewaySubnetPrefix": "10.100.254.0/27",
    "lbpublicIPAddressName": "vip-cvltLabVM",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbpublicIPAddressName'))]",
    "lbname": "cvltLabVM-RDPLB",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "CoolStorageAccountName": "[concat('cool', uniqueString(resourceGroup().id),'sta')]",
    "CoolStorageAccountType": "Standard_LRS",
    "CoolStorageAccountaccessTier": "Cool",
    "CoolStorageAccounthttps": false,
    "HotStorageAccountName": "[concat('hot', uniqueString(resourceGroup().id),'sta')]",
    "HotStorageAccountType": "Standard_LRS",
    "HotStorageAccountaccessTier": "Hot",
    "HotStorageAccounthttps": false
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[variables('CoolStorageAccountType')]"
      },
      "kind": "BlobStorage",
      "name": "[variables('CoolStorageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "accessTier": "[variables('CoolStorageAccountaccessTier')]",
        "supportsHttpsTrafficOnly": "[variables('CoolStorageAccounthttps')]",
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[variables('HotStorageAccountType')]"
      },
      "kind": "BlobStorage",
      "name": "[variables('HotStorageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "accessTier": "[variables('HotStorageAccountaccessTier')]",
        "supportsHttpsTrafficOnly": "[variables('HotStorageAccounthttps')]",
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "standard"
      },
      "kind": "Storage",
      "name": "[variables('diagnosticsStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {},
      "resources": [],
      "dependsOn": []
    },
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "commvault",
            "offer": "commvault",
            "sku": "csmav11",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        }
      },
      "plan": {
        "name": "csmav11",
        "publisher": "commvault",
        "product": "commvault"
      }
    },
    {
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-04-30-preview",
      "location": "[variables('location')]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": true
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('NSGInfraname'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGInfraname'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('networkInterfaceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-cvltLabVM')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('lbpublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-cvltLabVM",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('lbpublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"

      }
    },
    {
      "name": "[variables('NSGInfraname')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}